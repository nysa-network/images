name: docker

on:
  push:
    branches:
      - "master"
    tags:
      - "v*"

jobs:
  docker:
    strategy:
      matrix:
        chain:
          # TODO: make it dynamic
          - cosmoshub
          - govgen
          - juno
          - nolus

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

        # TODO: first check if docker image not already exist

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Go Build Cache for Docker
        uses: actions/cache@v3
        with:
          path: go-build-cache
          key: ${{ runner.os }}-go-build-cache
          restore-keys: |
            ${{ runner.os }}-go-build-cache

      - name: inject go-build-cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-source: go-build-cache

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version
        id: version
        uses: mikefarah/yq@master
        with:
          cmd: yq -r '.version' './${{ matrix.chain }}/build.yaml'

      - name: Get go_version
        id: go_version
        uses: mikefarah/yq@master
        with:
          cmd: yq -r '.go_version' './${{ matrix.chain }}/build.yaml'

      - name: Get chain_repository
        id: chain_repository
        uses: mikefarah/yq@master
        with:
          cmd: yq -r '.chain_repository' './${{ matrix.chain }}/build.yaml'

      - name: Get daemon_name
        id: daemon_name
        uses: mikefarah/yq@master
        with:
          cmd: yq -r '.daemon_name' './${{ matrix.chain }}/build.yaml'

      - name: Get daemon_home
        id: daemon_home
        uses: mikefarah/yq@master
        with:
          cmd: yq -r '.daemon_home' './${{ matrix.chain }}/build.yaml'

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.chain }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.version.outputs.result }}

      # TODO: Check if the directory have a custom Dockerfile
      # in that case, build a different image

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: "./Dockerfile"
          context: ./${{ matrix.chain }}
          build-args: |
            CHAIN_NAME=${{ matrix.chain }}
            VERSION=${{ steps.version.outputs.result }}
            GO_VERSION=${{ steps.go_version.outputs.result }}
            CHAIN_REPO=${{ steps.chain_repository.outputs.result }}
            DAEMON_NAME=${{ steps.daemon_name.outputs.result }}
            DAEMON_HOME=${{ steps.daemon_home.outputs.result }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
